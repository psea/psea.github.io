{"version":3,"sources":["components/util.tsx","components/ToolBar.tsx","components/NinjaSquadContainer.tsx","components/NinjaCard.tsx","components/NinjaProfiles.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["officeCountry","lund","stockholm","borlÃ¤nge","helsingborg","ljubljana","countryFlag","se","si","getOfficeFlag","office","toLowerCase","offices","Set","ToolBar","props","officeButtons","Array","from","officeFilterOptions","map","i","type","name","id","htmlFor","className","onChange","e","target","city","getAttribute","checked","add","delete","onOfficeFilterChange","value","filterName","onFilterNameChange","placeholder","size","maxLength","NinjaSquadContainer","children","NinjaCard","linkedInEl","href","linkedIn","rel","gitHubEl","gitHub","twitterEl","twitter","src","imagePortraitUrl","alt","undefined","NinjaProfiles","useState","setOffices","setFilterName","ninjaCards","ninja","filter","has","length","indexOf","forEach","console","log","bugNinja","API_HEADERS","App","setNinja","useEffect","fetch","headers","then","res","json","err","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.af1c762f.chunk.js","sourcesContent":["export interface NinjaInfo {\n  name: string;\n  imagePortraitUrl: string;\n  office: string;\n  linkedIn: string;\n  gitHub: string;\n  twitter: string;\n}\n\nconst officeCountry: {[key:string]: string} = {\n  lund: 'se',\n  stockholm: 'se',\n  borlÃ¤nge: 'se',\n  helsingborg: 'se',\n  ljubljana: 'si'\n}\n\nconst countryFlag: {[key:string]: string} = {\n  se: 'ðŸ‡¸ðŸ‡ª',\n  si: 'ðŸ‡¸ðŸ‡®',\n}\n\nexport function getOfficeFlag(office: string) : string {\n  return countryFlag[officeCountry[office.toLowerCase()]];\n}\n\n","import { getOfficeFlag } from './util';\nimport './ToolBar.css';\n\ninterface ToolBarProps {\n  officeFilterOptions: Set<string>;\n  filterName: string;\n  onOfficeFilterChange: (a: Set<string>) => void;\n  onFilterNameChange: (name: string) => void;\n}\n\nconst offices: Set<string> = new Set(); // not really Reacty way. React purists will complain? \"just remove the duck\" for peer review ;-)\n\nfunction ToolBar(props: ToolBarProps) {\n\n  // event delegation. checkbox events are collected at a <form> level\n  function onOfficeChange(e: React.FormEvent<HTMLFormElement>) {\n    const target = e.target as HTMLInputElement;\n    const city = target.getAttribute('name');\n\n    // No pattern matching? still? It's 2021 already. Come on Anders, we know you can do it!\n    if (!city) return;\n\n    if (target.checked)\n      offices.add(city);\n    else\n      offices.delete(city);\n\n    props.onOfficeFilterChange(offices);\n  }\n\n  // Component is using the \"Checkbox hack\" to toggle the state\n  const officeButtons = Array.from(props.officeFilterOptions)\n    .map((office, i) => {\n      return (\n        <div key={i}>\n          <input type=\"checkbox\" name={office} id={office}/>\n          <label htmlFor={office}><span className=\"emoji-font\">{getOfficeFlag(office)}</span> {office}</label>\n        </div>\n      );\n    });\n\n  return (\n    <nav className=\"toolbar\">\n      <form onChange={onOfficeChange}>\n        <div className=\"button-bar\"> \n          {officeButtons}\n        </div>\n        <input \n          className=\"name-input\" \n          type=\"text\" \n          value={props.filterName} \n          onChange={e => props.onFilterNameChange(e.target.value)}\n          placeholder=\"Ninja name\" \n          size={10} \n          maxLength={10}/>\n      </form>\n    </nav>\n  );\n}\n\nexport default ToolBar;\n","import React from 'react';\nimport './NinjaSquadContainer.css';\n\ninterface NinjaSquadContainerProps {\n  children: React.ReactChild[];\n}\n\nfunction NinjaSquadContainer(props: NinjaSquadContainerProps) {\n  return (\n    <div className=\"ninja-squad\">\n      {props.children}\n    </div>\n  );\n}\n\nexport default NinjaSquadContainer;","import {getOfficeFlag} from './util';\nimport './NinjaCard.css';\n\ninterface NinjaCardProps {\n  name: string;\n  office: string;\n  imagePortraitUrl?: string,\n  linkedIn?: string;\n  gitHub?: string;\n  twitter?: string;\n}\n\nfunction NinjaCard(props: NinjaCardProps) {\n  const linkedInEl = <a href={\"https://linkedin.com\" + props.linkedIn} target=\"_blank\" rel=\"noreferrer\"><i className=\"fab fa-linkedin\"></i></a>;\n  const gitHubEl = <a href={\"https://github.com/\" + props.gitHub} target=\"_blank\" rel=\"noreferrer\"><i className=\"fab fa-github\"></i></a>;\n  const twitterEl = <a href={\"https://twitter.com/\" + props.twitter} target=\"_blank\" rel=\"noreferrer\"><i className=\"fab fa-twitter\"></i></a>;\n\n  return (\n    <article className=\"ninja-card\">\n      <img className=\"portrait\" src={props.imagePortraitUrl ? props.imagePortraitUrl : \"assets/ninja.png\"} alt={props.name}/>\n      <div className=\"details\">\n        <h2>\n          <span className=\"name\">{props.name}</span><br></br>\n          <span className=\"office\">Office: <span className=\"emoji-font\">{getOfficeFlag(props.office)}</span> {props.office}</span>\n        </h2>\n        <address>\n          {props.linkedIn ? linkedInEl : undefined}\n          {props.gitHub ? gitHubEl : undefined}\n          {props.twitter ? twitterEl : undefined}\n        </address> \n      </div>\n    </article> \n  );\n}\n\nexport default NinjaCard;","import React, { useState } from 'react';\n// sub components\nimport ToolBar from './ToolBar';\nimport NinjaSquadContainer from './NinjaSquadContainer';\nimport NinjaCard from './NinjaCard';\nimport { NinjaInfo } from './util';\n\nimport './NinjaProfiles.css';\n\ninterface NinjaProfilesProps {\n  ninja: NinjaInfo[];\n}\n\nfunction NinjaProfiles(props: NinjaProfilesProps) {\n  // filter options\n  const [offices, setOffices] = useState(new Set<string>());\n  const [filterName, setFilterName] = useState(\"\");\n\n  const ninjaCards = props.ninja\n    .filter(ninja => offices.size === 0       || offices.has(ninja.office.toLowerCase()))\n    .filter(ninja => filterName.length === 0  || ninja.name.toLowerCase().indexOf(filterName) !== -1)\n    .map((ninja, i) =>\n      <NinjaCard  key = {i} \n                  name = {ninja.name} \n                  imagePortraitUrl = {ninja.imagePortraitUrl}\n                  office = {ninja.office}\n                  linkedIn = {ninja.linkedIn}\n                  gitHub = {ninja.gitHub}\n                  twitter = {ninja.twitter}\n                  />\n    );\n\n  const officeFilterOptions: Set<string> = new Set();\n  props.ninja.forEach(ninja => officeFilterOptions.add(ninja.office.toLowerCase()));\n\n  console.log(\"NinjaProfiles: \", filterName);\n  console.log(\"NinjaProfiles: \", ninjaCards);\n\n  return (\n    <article className=\"ninja-profiles\">\n      <header>\n        <h1>The fellowship of the tretton37</h1>\n        <ToolBar \n          officeFilterOptions={officeFilterOptions} \n          filterName={filterName}\n          onOfficeFilterChange={offices => setOffices(new Set(offices))}\n          onFilterNameChange={setFilterName}\n        />\n      </header>\n      <NinjaSquadContainer>\n        {ninjaCards}\n      </NinjaSquadContainer>\n    </article>\n  );\n}\n\nexport default NinjaProfiles;","import React, { useState, useEffect } from 'react';\nimport NinjaProfiles from './components/NinjaProfiles';\nimport { NinjaInfo } from './components/util';\nimport './App.css';\n\nconst bugNinja = [\n  {\n    name: 'Ninja #404: Woot-woot! Something failed. You found a bug! It\\'s first time happaning to me. I\\'m telling you. It will never happens again, I promise.ðŸ¤ž',\n    imagePortraitUrl: 'assets/ninja.png',\n    office: 'cyberspace',\n    linkedIn: '',\n    gitHub: '',\n    twitter: '',\n  },\n  {\n    name: 'Ninja #200: Don\\'t listen to that other guy, he is doing it all the time...',\n    imagePortraitUrl: 'assets/ninja.png',\n    office: 'cyberspace',\n    linkedIn: '',\n    gitHub: '',\n    twitter: '',\n  }\n];\n\n// const API_ENDPOINT = 'http://localhost:8000/employee.json';\nconst API_ENDPOINT = 'https://api.1337co.de/v3/employees';\nconst API_HEADERS = {\n  \"authorization\": \"api-key 14:2021-11-09:anna.vanduijvenbode@tretton37.com caf2233de9ac4458b991b1108686506f219d0602c5ae3d22830838c38c20ea5b\"\n};\n\nfunction App() {\n  const [ninja, setNinja] = useState<NinjaInfo[]>([]);\n\n  useEffect( () => {\n    fetch(API_ENDPOINT, { headers: API_HEADERS })\n      .then(res => res.json())\n      .then(\n        setNinja,\n        err => { setNinja(bugNinja); console.error(err)})}, \n      []);\n\n  return <NinjaProfiles ninja = {ninja}/>;\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}